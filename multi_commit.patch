From fd724ef1e5a3529eb9d78823f6841d8e96623d99 Mon Sep 17 00:00:00 2001
From: Clarence Sai <82635407+clarence-ck@users.noreply.github.com>
Date: Sun, 11 Aug 2024 23:31:33 +0800
Subject: [PATCH 1/2] update App.tsx and Graph.tsx

---
 src/App.tsx   | 24 ++++++++++++++++++------
 src/Graph.tsx | 16 ++++++++++++----
 2 files changed, 30 insertions(+), 10 deletions(-)

diff --git a/src/App.tsx b/src/App.tsx
index 0728518..68f3a61 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -8,6 +8,7 @@ import './App.css';
  */
 interface IState {
   data: ServerRespond[],
+  showGraph: boolean,
 }
 
 /**
@@ -22,6 +23,7 @@ class App extends Component<{}, IState> {
       // data saves the server responds.
       // We use this state to parse data down to the child element (Graph) as element property
       data: [],
+      showGraph: false,
     };
   }
 
@@ -29,18 +31,28 @@ class App extends Component<{}, IState> {
    * Render Graph react component with state.data parse as property data
    */
   renderGraph() {
-    return (<Graph data={this.state.data}/>)
+    if (this.state.showGraph) {
+      return (<Graph data={this.state.data}/>)
+    }
   }
 
   /**
    * Get new data from server and update the state with the new data
    */
   getDataFromServer() {
-    DataStreamer.getData((serverResponds: ServerRespond[]) => {
-      // Update the state by creating a new array of data that consists of
-      // Previous data in the state and the new data from server
-      this.setState({ data: [...this.state.data, ...serverResponds] });
-    });
+    let x = 0;
+    const interval = setInterval(() => {
+        DataStreamer.getData((serverResponds: ServerRespond[]) => {
+            this.setState({
+                data: serverResponds,
+                showGraph: true
+            });
+        });
+        x++;
+        if (x > 1000) {
+            clearInterval(interval);
+        }
+    }, 100);
   }
 
   /**
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 3b2a7da..f5e42c4 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -14,7 +14,7 @@ interface IProps {
  * Perspective library adds load to HTMLElement prototype.
  * This interface acts as a wrapper for Typescript compiler.
  */
-interface PerspectiveViewerElement {
+interface PerspectiveViewerElement extends HTMLElement{
   load: (table: Table) => void,
 }
 
@@ -32,7 +32,7 @@ class Graph extends Component<IProps, {}> {
 
   componentDidMount() {
     // Get element to attach the table from the DOM.
-    const elem: PerspectiveViewerElement = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+    const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
       stock: 'string',
@@ -47,11 +47,19 @@ class Graph extends Component<IProps, {}> {
     if (this.table) {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
 
-      // Add more Perspective configurations here.
-      elem.load(this.table);
+       // Add more Perspective configurations here.
+       elem.load(this.table);
+       elem.setAttribute("view", "y_line");
+       elem.setAttribute("column-pivots", '["stock"]');
+       elem.setAttribute("row_pivots", '["timestamp"]');
+       elem.setAttribute("columns", '["top_ask_price"]');
+       elem.setAttribute("aggregates",
+           '{"stock":"distinct_count", "top_ask_price":"avg", "top_bid_price":"avg", "timestamp":"distinct_count"}'
+       );
     }
   }
 
+
   componentDidUpdate() {
     // Everytime the data props is updated, insert the data into Perspective table
     if (this.table) {
-- 
2.44.0.windows.1


From 98059c76d8a84ac1b035f861f5ad217277ff3c9a Mon Sep 17 00:00:00 2001
From: Clarence Sai <82635407+clarence-ck@users.noreply.github.com>
Date: Sun, 11 Aug 2024 23:38:28 +0800
Subject: [PATCH 2/2] Update App.tsx

---
 src/App.tsx | 40 +++++++++++++++++++++-------------------
 1 file changed, 21 insertions(+), 19 deletions(-)

diff --git a/src/App.tsx b/src/App.tsx
index 68f3a61..478f576 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -60,27 +60,29 @@ class App extends Component<{}, IState> {
    */
   render() {
     return (
-      <div className="App">
-        <header className="App-header">
-          Bank & Merge Co Task 2
-        </header>
-        <div className="App-content">
-          <button className="btn btn-primary Stream-button"
-            // when button is click, our react app tries to request
-            // new data from the server.
-            // As part of your task, update the getDataFromServer() function
-            // to keep requesting the data every 100ms until the app is closed
-            // or the server does not return anymore data.
-            onClick={() => {this.getDataFromServer()}}>
-            Start Streaming Data
-          </button>
-          <div className="Graph">
-            {this.renderGraph()}
-          </div>
+        <div className="App">
+            <header className="App-header">
+                Bank & Merge Co Task 2
+            </header>
+            <div className="App-content">
+                <button className="btn btn-primary Stream-button"
+                    // when button is click, our react app tries to request
+                    // new data from the server.
+                    // As part of your task, update the getDataFromServer() function
+                    // to keep requesting the data every 100ms until the app is closed
+                    // or the server does not return anymore data.
+                        onClick={() => {
+                            this.getDataFromServer()
+                        }}>
+                    Start Streaming Data
+                </button>
+                <div className="Graph">
+                    {this.renderGraph()}
+                </div>
+            </div>
         </div>
-      </div>
     )
-  }
+}
 }
 
 export default App;
-- 
2.44.0.windows.1

